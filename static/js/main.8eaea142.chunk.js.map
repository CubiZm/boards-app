{"version":3,"sources":["static/img/logo.svg","components/SideMenu/static/img/settigns-icon.svg","components/SideMenu/static/img/user-icon.svg","components/Select/static/img/arrow.svg","components/Avatar/static/img/user-avatar.svg","components/Logo/Logo.tsx","components/Header/Header.tsx","components/SideMenu/data.ts","components/SideMenu/SideMenu.tsx","components/Content/Content.tsx","components/Select/Select.tsx","components/Input/Input.tsx","components/Checkbox/Checkbox.tsx","screens/Main/data.ts","components/Avatar/Avatar.tsx","components/Button/Button.tsx","screens/Main/Main.tsx","screens/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Logo","className","src","logo","alt","Header","data","id","title","text","img","UserImg","SettingsImg","SideMenu","map","key","tabIndex","href","Content","props","children","Select","selectedTitle","type","value","name","checked","onChange","console","log","selectValue","arrow","aria-hidden","cn","htmlFor","Input","valueRef","useRef","ref","required","placeholder","labelValue","defaultValue","e","target","current","classList","add","remove","disabled","Checkbox","dataLanguage","dataTimeZone","dataNewTask","Avatar","userAvatarImg","noPicture","userName","userStuff","userTeam","Button","isTextBtn","isOutline","textBtn","Main","action","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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,YAAa,8BACbL,KAAM,aAIG2B,EAAe,CAC1B,CACE7C,GAAI,GACJuB,YAAa,yCACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,0CACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,qBACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,4BACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,oBACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,qBACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,qBACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,sBACbL,KAAM,QAER,CACElB,GAAI,GACJuB,YAAa,mBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,wBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,0BACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,uBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,yCACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,sBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,6BACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,kCACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,0BACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,wBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,0CACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,uCACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,2BACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,2BACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,qCACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,qBACbL,KAAM,SAIG4B,EAAc,CACzB,CACE9C,GAAI,IACJuB,YAAa,iBACbL,KAAM,QAER,CACElB,GAAI,IACJuB,YAAa,aACbL,KAAM,S,wBCnJK6B,EApBA,SAACnC,GACd,OACE,yBAAKlB,UAAU,cACb,uBAAGA,UAAU,qBAAqBgB,KAAK,KACrC,yBAAKhB,UAAU,sBAAsBC,IAAKiB,EAAMoC,eAAiBC,IAAWpD,IAAI,gBAChF,yCAGF,yBAAKH,UAAU,oBACb,uBAAGA,UAAU,yBACVkB,EAAMsC,UAET,uBAAGxD,UAAU,qBACVkB,EAAMuC,UADT,IACqB,IADrB,KAC4BvC,EAAMwC,SADlC,aCEOC,G,MAfA,SAACzC,GACd,OACE,4BACEI,KAAK,SACLtB,UAAWgC,IAAG,SAAU,CACtB,YAAed,EAAM0C,UACrB,eAAkB1C,EAAM2C,YAE1Bb,SAAU9B,EAAM8B,UAEf9B,EAAM4C,WCkGEC,EA3GF,WACX,OACE,gCACE,gBAAC,EAAD,MACA,gBAAC,EAAD,MACA,gBAAC,EAAD,KACE,uBAAK/D,UAAU,WACb,sBAAIA,UAAU,kBAAd,mBAEA,gBAAC,EAAD,CACEsD,cAAc,kDACdE,SAAS,aACTC,UAAU,eACVC,SAAS,aAGX,wBAAMM,OAAO,GAAGhE,UAAU,sBACxB,4BAAUA,UAAU,oBAClB,uBAAKA,UAAU,yBACb,gBAAC,EAAD,CACEM,GAAI,OACJkC,WAAW,aACXC,aAAc,SAGhB,gBAAC,EAAD,CACEnC,GAAI,OACJkC,WAAW,YACXC,aAAc,UAGhB,gBAAC,EAAD,CACEnC,GAAI,OACJkC,WAAW,eACXC,aAAc,UAGhB,gBAAC,EAAD,CACEnC,GAAI,OACJkC,WAAW,YACXC,aAAc,iCAGhB,gBAAC,EAAD,CACEnC,GAAI,OACJkC,WAAW,WACXC,aAAc,qBAGhB,gBAAC,EAAD,CACEnC,GAAI,OACJkC,WAAW,eACXC,aAAc,yBAKpB,gBAAC,EAAD,CAAQqB,QAAQ,iBAChB,gBAAC,EAAD,CAAQF,WAAW,EAAME,QAAQ,YAGnC,sBAAI9D,UAAU,kBAAd,sBAEA,wBAAMgE,OAAO,GAAGhE,UAAU,2BACxB,4BAAUA,UAAU,iDAClB,uBAAKA,UAAU,yBACb,gBAAC,EAAD,CAAQqB,cAAc,YAAYhB,KAAM8C,IAExC,gBAAC,EAAD,CAAQ9B,cAAc,WAAWhB,KAAM6C,IAEvC,gBAAC,EAAD,CACE7B,cAAc,iCACdhB,KAAM+C,MAKZ,4BAAUpD,UAAU,oBAClB,gBAAC,EAAD,CACEM,GAAG,UACHkB,KAAK,UACLhB,KAAK,0EAGP,qBAAGQ,KAAK,IAAIhB,UAAU,gBAAgBe,SAAU,GAAhD,qCAGF,gBAAC,EAAD,CAAQ+C,QAAQ,gBAAgBd,UAAU,SCvFvCiB,G,MARH,WACV,OACE,yBAAKjE,UAAU,OACX,kBAAC,EAAD,S,MCIYkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8eaea142.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f6f012d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/settigns-icon.50fd70b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-icon.0fe516fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.b6065243.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-avatar.42a40d48.svg\";","import React from \"react\";\n\nimport logo from \"../../static/img/logo.svg\"\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <a>\n        <img src={logo} alt=\"logo\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport './Header.scss';\nimport Logo from \"../Logo/Logo\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Logo/>\n    </header>\n  );\n};\n\nexport default Header;\n","import SettingsImg from \"./static/img/settigns-icon.svg\";\nimport UserImg from \"./static/img/user-icon.svg\";\n\nexport const data = [\n  {\n    id: 1,\n    title: \"Personal settings\",\n    text: [\n      \"Profile details\",\n      \"Account info\",\n      \"Email preferences\",\n      \"Work schedule\",\n      \"Password & security\",\n      \"Apps access\"\n    ],\n    img: UserImg\n  },\n  {\n    id: 2,\n    title: \"Account managment\",\n    text: [\n      \"Subscription\",\n      \"Billing\",\n      \"Users & groups\",\n      \"Request form builder\",\n      \"Custom workflows\",\n      \"Activity reports\",\n      \"Calendars\",\n      \"Account settings\",\n      \"Advanced security\"\n    ],\n    img: SettingsImg\n  }\n];\n","import React from \"react\";\nimport {data} from './data'\n\nimport \"./SideMenu.scss\";\n\nconst SideMenu = () => {\n  const renderMenuItem = (data: any) => {\n    return (\n      <nav>\n      <ul key={data.id} className=\"side-menu__list\">\n        {data.title && (\n          <li className=\"side-menu__title\">\n            <img className=\"side-menu__icon\" src={data.img} alt=\"icon\" />\n            {data.title}\n          </li>\n        )}\n        {data.text.map((data: string) => (\n          <li className=\"side-menu__item\" tabIndex={1}>\n            <a href=\"#\" className=\"side-menu__link\">\n              {data}\n            </a>\n          </li>\n        ))}\n      </ul>\n      </nav>\n    );\n  };\n\n  return <aside className=\"side-menu\">{data.map(renderMenuItem)}</aside>;\n};\n\nexport default SideMenu;\n","import React from \"react\";\n\nimport \"./Content.scss\";\n\nconst Content = (props: any) => {\n  return (\n    <main className=\"main\">\n      {props.children}\n    </main>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport cn from \"classnames\";\n\nimport arrow from \"./static/img/arrow.svg\"\n\nimport \"./Select.scss\";\n\ninterface selectProps {\n  selectedTitle?: string;\n  data: any;\n}\n\nconst Select = (props: selectProps) => {\n\n  const renderSelectValue = (data: any) => {\n    return (\n      <div key={data.id} className=\"select-box__value\">\n        <input\n          className=\"select-box__input\"\n          type=\"radio\"\n          id={data.id}\n          value={data.id}\n          name={data.name}\n          checked={true}\n          onChange={() => console.log('hello')}\n        />\n        <p className=\"select-box__input-text\">\n          {data.selectValue ? data.selectValue : \"Empty text\"}\n        </p>\n      </div>\n    );\n  };\n\n  const renderSelectList = (data: any) => {\n    return (\n      <>\n        {data.selectValue && (\n          <li key={data.id} className={cn(\"select-box__item\", {\n          })}>\n            <label\n              className=\"select-box__option\"\n              htmlFor={data.id}\n              aria-hidden={true}\n            >\n              {data.selectValue}\n            </label>\n          </li>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"select-box\">\n      <div className=\"select-box__current\" tabIndex={1}>\n        <span className=\"select-box__label\">{props.selectedTitle}</span>\n        {props.data.map(renderSelectValue)}\n\n        <img\n          className=\"select-box__icon\"\n          src={arrow}\n          alt=\"Arrow Icon\"\n          aria-hidden=\"true\"\n        />\n      </div>\n\n      <ul className=\"select-box__list\">{props.data.map(renderSelectList)}</ul>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useRef } from \"react\";\n\nimport \"./Input.scss\";\n\ninterface Props {\n  type?: string;\n  defaultValue?: string;\n  labelValue?: string\n  id: string;\n  placeholder?: string;\n  disabled?: boolean;\n}\n\nexport const Input = (props: Props) => {\n  const valueRef = useRef();\n\n  const handlerChanges = (e: any) => {\n    if (e.target.value === \"\") {\n      valueRef.current.classList.add(\"input-box__input_error\");\n    }\n    if (e.target.value !== \"\") {\n      valueRef.current.classList.remove(\"input-box__input_error\");\n    }\n  };\n\n  return (\n    <div className=\"input-box\">\n      <input\n        ref={valueRef}\n        id={props.id}\n        type={props.type || \"text\"}\n        className=\"input-box__input\"\n        required={true}\n        placeholder={props.labelValue || props.placeholder}\n        defaultValue={props.defaultValue}\n        onChange={handlerChanges}\n        disabled={props.disabled}\n      />\n      <label htmlFor={props.id} className=\"input-box__label\">\n        {props.labelValue}\n      </label>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./Checkbox.scss\";\n\ninterface Props {\n  id: string;\n  name: string;\n  text: string;\n}\n\nconst Checkbox = (props: Props) => {\n  return (\n    <div className=\"input-toggle\">\n      <input\n        type=\"checkbox\"\n        id={props.id}\n        name={props.name}\n        value=\"checkbox\"\n        className=\"input-toggle__input\"\n      />\n      <label\n        htmlFor={props.id}\n        className=\"input-toggle__label input-toggle__label_checkbox\"\n        tabIndex={1}\n      >\n        {props.text}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","export const dataLanguage = [\n  {\n    id: 1,\n    selectValue: \"Deutsch\",\n    name: \"language\"\n  },\n  {\n    id: \"language\",\n    selectValue: \"English\",\n    name: \"language\"\n  },\n  {\n    id: 3,\n    selectValue: \"Español\",\n    name: \"language\"\n  },\n  {\n    id: 4,\n    selectValue: \"Français\",\n    name: \"language\"\n  },\n  {\n    id: 5,\n    selectValue: \"Italiano\",\n    name: \"language\"\n  },\n  {\n    id: 6,\n    selectValue: \"Português (Brasil)\",\n    name: \"language\"\n  },\n  {\n    id: 7,\n    selectValue: \"Русский\",\n    name: \"language\"\n  },\n  {\n    id: 8,\n    selectValue: \"日本語\",\n    name: \"language\"\n  },\n  {\n    id: 9,\n    selectValue: \"中文 (中国)\",\n    name: \"language\"\n  }\n];\n\nexport const dataTimeZone = [\n  {\n    id: 10,\n    selectValue: \"(GMT-07:00) Pacific Time (US & Canada)\",\n    name: \"time\"\n  },\n  {\n    id: 20,\n    selectValue: \"(GMT-06:00) Mountain Time (US & Canada)\",\n    name: \"time\"\n  },\n  {\n    id: 30,\n    selectValue: \"(GMT+03:00) Moscow\",\n    name: \"time\"\n  },\n  {\n    id: 40,\n    selectValue: \"(GMT-11:00) Midway Island\",\n    name: \"time\"\n  },\n  {\n    id: 50,\n    selectValue: \"(GMT-11:00) Samoa\",\n    name: \"time\"\n  },\n  {\n    id: 60,\n    selectValue: \"(GMT-10:00) Hawaii\",\n    name: \"time\"\n  },\n  {\n    id: 70,\n    selectValue: \"(GMT-08:00) Alaska\",\n    name: \"time\"\n  },\n  {\n    id: 80,\n    selectValue: \"(GMT-07:00) Arizona\",\n    name: \"time\"\n  },\n  {\n    id: 90,\n    selectValue: \"(GMT-07:00) Baja\",\n    name: \"time\"\n  },\n  {\n    id: 100,\n    selectValue: \"(GMT-07:00) Chihuahua\",\n    name: \"time\"\n  },\n  {\n    id: 110,\n    selectValue: \"(GMT-07:00) Los Angeles\",\n    name: \"time\"\n  },\n  {\n    id: 120,\n    selectValue: \"(GMT-07:00) Mazatlan\",\n    name: \"time\"\n  },\n  {\n    id: 130,\n    selectValue: \"(GMT-07:00) Pacific Time (US & Canada)\",\n    name: \"time\"\n  },\n  {\n    id: 140,\n    selectValue: \"(GMT-07:00) Tijuana\",\n    name: \"time\"\n  },\n  {\n    id: 150,\n    selectValue: \"(GMT-06:00) Guatemala City\",\n    name: \"time\"\n  },\n  {\n    id: 160,\n    selectValue: \"(GMT-06:00) Managua (Nicaragua)\",\n    name: \"time\"\n  },\n  {\n    id: 170,\n    selectValue: \"(GMT-06:00) Mexico City\",\n    name: \"time\"\n  },\n  {\n    id: 180,\n    selectValue: \"(GMT-06:00) Monterrey\",\n    name: \"time\"\n  },\n  {\n    id: 190,\n    selectValue: \"(GMT-06:00) Mountain Time (US & Canada)\",\n    name: \"time\"\n  },\n  {\n    id: 200,\n    selectValue: \"(GMT-06:00) San José (Costa Rica)\",\n    name: \"time\"\n  },\n  {\n    id: 210,\n    selectValue: \"(GMT-06:00) San Salvador\",\n    name: \"time\"\n  },\n  {\n    id: 220,\n    selectValue: \"(GMT-06:00) Saskatchewan\",\n    name: \"time\"\n  },\n  {\n    id: 230,\n    selectValue: \"(GMT-06:00) Tegucigalpa (Honduras)\",\n    name: \"time\"\n  },\n  {\n    id: 240,\n    selectValue: \"(GMT-05:00) Bogota\",\n    name: \"time\"\n  },\n];\n\nexport const dataNewTask = [\n  {\n    id: 1000,\n    selectValue: \"Starting today\",\n    name: \"task\"\n  },\n  {\n    id: 2000,\n    selectValue: \"Backlogged\",\n    name: \"task\"\n  },\n];\n","import React from \"react\";\n\nimport \"./Avatar.scss\";\n\nimport noPicture from \"./static/img/user-avatar.svg\";\n\ninterface Props {\n  userAvatarImg?: string;\n  userName: string;\n  userStuff: string;\n  userTeam?: string;\n}\n\nconst Avatar = (props: Props) => {\n  return (\n    <div className=\"avatar-box\">\n      <a className=\"avatar-box__loader\" href=\"#\">\n        <img className=\"avatar-box__picture\" src={props.userAvatarImg || noPicture} alt=\"your avatar\" />\n        <span>upload</span>\n      </a>\n\n      <div className=\"avatar-box__info\">\n        <p className=\"avatar-box__user-name\">\n          {props.userName}\n        </p>\n        <p className=\"avatar-box__staff\">\n          {props.userStuff} {\" \"} ({props.userTeam} Team)\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport cn from \"classnames\";\n\nimport \"./Button.scss\"\n\ninterface ButtonProps {\n  isTextBtn?: boolean;\n  isOutline?: boolean\n  textBtn: string;\n  disabled?: boolean\n}\n\nconst Button = (props: ButtonProps) => {\n  return (\n    <button\n      type=\"button\"\n      className={cn(\"button\", {\n        \"button_text\": props.isTextBtn,\n        \"button_outline\": props.isOutline\n      })}\n      disabled={props.disabled}\n    >\n      {props.textBtn}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as React from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\nimport Content from \"../../components/Content/Content\";\n\nimport \"./Main.scss\";\nimport Select from \"../../components/Select/Select\";\nimport { Input } from \"../../components/Input/Input\";\nimport Checkbox from \"../../components/Checkbox/Checkbox\";\nimport { dataLanguage, dataNewTask, dataTimeZone } from \"./data\";\nimport Avatar from \"../../components/Avatar/Avatar\";\nimport Button from \"../../components/Button/Button\";\n\nconst Main = () => {\n  return (\n    <>\n      <Header />\n      <SideMenu />\n      <Content>\n        <div className=\"profile\">\n          <h1 className=\"profile__title\">Profile details</h1>\n\n          <Avatar\n            userAvatarImg=\"http://heyanton.com/_images/userpics/all/49.jpg\"\n            userName=\"Jhon Smith\"\n            userStuff=\"UI developer\"\n            userTeam=\"crafting\"\n          />\n\n          <form action=\"\" className=\"profile__form-info\">\n            <fieldset className=\"profile__fiedset\">\n              <div className=\"profile__fiedset-wrap\">\n                <Input\n                  id={\"name\"}\n                  labelValue=\"First name\"\n                  defaultValue={\"Jhon\"}\n                />\n\n                <Input\n                  id={\"name\"}\n                  labelValue=\"Last name\"\n                  defaultValue={\"Smith\"}\n                />\n\n                <Input\n                  id={\"name\"}\n                  labelValue=\"Company name\"\n                  defaultValue={\"Wrike\"}\n                />\n\n                <Input\n                  id={\"name\"}\n                  labelValue=\"Job title\"\n                  defaultValue={\"UI Developer (crafting team)\"}\n                />\n\n                <Input\n                  id={\"name\"}\n                  labelValue=\"Location\"\n                  defaultValue={\"Saint-Petersburg\"}\n                />\n\n                <Input\n                  id={\"name\"}\n                  labelValue=\"Phone number\"\n                  defaultValue={\"+7 (923) 345-34-32\"}\n                />\n              </div>\n            </fieldset>\n\n            <Button textBtn=\"Save changes\" />\n            <Button isTextBtn={true} textBtn=\"Cancel\" />\n          </form>\n\n          <h2 className=\"profile__title\">Workspace settings</h2>\n\n          <form action=\"\" className=\"profile__form-workplace\">\n            <fieldset className=\"profile__fiedset  profile__fiedset_big-margin\">\n              <div className=\"profile__fiedset-wrap\">\n                <Select selectedTitle=\"Time Zone\" data={dataTimeZone} />\n\n                <Select selectedTitle=\"Language\" data={dataLanguage} />\n\n                <Select\n                  selectedTitle=\"New task created by default as\"\n                  data={dataNewTask}\n                />\n              </div>\n            </fieldset>\n\n            <fieldset className=\"profile__fiedset\">\n              <Checkbox\n                id=\"suggest\"\n                name=\"suggest\"\n                text=\"Show pop-up with suggestion to align the dates of tasks and subtasks.\"\n              />\n\n              <a href=\"#\" className=\"profile__link\" tabIndex={1}>How does subtask alignment work?</a>\n            </fieldset>\n\n            <Button textBtn=\"Save settings\" disabled={true} />\n          </form>\n\n          {/*<div className=\"test\">*/}\n          {/*  <Select selectedTitle=\"smb\" data={dataLanguage} />*/}\n          {/*</div>*/}\n\n          {/*<div style={{ marginTop: \"20px\" }}>*/}\n          {/*  <Input id={\"name\"} defaultValue={\"Hello\"} placeholder={\"hello\"} />*/}\n          {/*</div>*/}\n\n          {/*<div style={{ marginTop: \"20px\" }}>*/}\n\n          {/*</div>*/}\n        </div>\n      </Content>\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from \"../Main/Main\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n        <Main/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./screens/App/App\";\n\nimport './styles/index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}